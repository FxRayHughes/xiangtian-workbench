import {defineStore} from "pinia";
import dbStorage from "./dbStorage";
import {sUrl} from "../consts";
import {get, post} from "../js/axios/request";
import TUIKit from "../TUIKit";

const getUserSigUrl = sUrl('/app/chat/getUserSig')
import {appStore} from "../store";
// @ts-ignore
export const chatStore = defineStore('chatStore', {
    state: () => ({
      userSig: '',
    }),
    actions: {
      async getUserSig() {

        const getRs = await get(getUserSigUrl)
        if (getRs.status) {
          this.userSig = getRs.data
        }
      },
      async updateUserInfo() {
        let userInfo = appStore().userInfo
        let rs = await window.$TUIKit.tim.updateMyProfile({
          nick: userInfo.nickname,
          avatar: userInfo.avatar,
          selfSignature: String(userInfo.signature),

        })
        console.log('尝试更新用户信息结果', rs)
      },
      async login() {
        await this.getUserSig()
        await window.$TUIKit.login({
          userID: String(appStore().userInfo.uid),
          userSig: this.userSig, // The password with which the user logs in to IM. It is the ciphertext generated by encrypting information such as userID.For the detailed generation method, see Generating UserSig
        });
        await this.updateUserInfo()
      }
    },
    persist: {
      enabled: false,
      strategies: [{
        // 自定义存储的 key，默认是 store.$id
        // 可以指定任何 extends Storage 的实例，默认是 sessionStorage
        storage: dbStorage,
        // state 中的字段名，按组打包储存
      }]
    }
  }
)
