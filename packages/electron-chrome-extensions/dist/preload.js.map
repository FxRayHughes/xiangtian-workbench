{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/preload.ts","webpack:///./src/renderer/event.ts","webpack:///./src/renderer/index.ts","webpack:///external \"electron\""],"names":["location","href","startsWith","injectExtensionAPIs","formatIpcName","name","listenerMap","Map","addExtensionListener","extensionId","callback","listenerCount","get","ipcRenderer","send","set","addListener","event","args","process","console","log","removeExtensionListener","has","delete","removeListener","invokeExtension","fnName","options","length","pop","undefined","noop","warn","serialize","result","invoke","e","error","electronContext","mainWorldScript","electron","window","chrome","runtime","id","manifest","getManifest","localeMessages","opts","imageData2base64","imageData","canvas","document","createElement","ctx","getContext","width","height","putImageData","toDataURL","ExtensionEvent","constructor","getRules","ruleIdentifiers","Error","hasListener","removeRules","addRules","rules","hasListeners","ChromeSetting","clear","apiDefinitions","browserAction","shouldInject","browser_action","factory","base","api","setTitle","getTitle","setIcon","details","ImageData","Object","entries","reduce","obj","pair","setPopup","getPopup","setBadgeText","getBadgeText","setBadgeBackgroundColor","getBadgeBackgroundColor","enable","disable","onClicked","commands","getAll","onCommand","contextMenus","menuCounter","menuCallbacks","menuCreate","hasInternalListener","addInternalListener","info","tab","menuItemId","create","createProperties","onclick","update","remove","removeAll","cookies","getAllCookieStores","onChanged","permissions","contains","i18n","getMessage","messageName","substitutions","localeJson","messageKey","preMatch","str","pattern","test","templater","source","scope","tokenRegex","i","replace","match","key","rs","gotMessage","matches","extension","isAllowedIncognitoAccess","isAllowedFileSchemeAccess","getViews","notifications","getPermissionLevel","onButtonClicked","onClosed","privacy","network","networkPredictionEnabled","webRTCIPHandlingPolicy","websites","hyperlinkAuditingEnabled","openOptionsPage","storage","local","managed","sync","tabs","executeScript","arg1","arg2","arg3","query","active","windowId","windows","WINDOW_ID_CURRENT","activeTab","getSelected","getCurrent","getAllInWindow","insertCSS","reload","goBack","goForward","onCreated","onRemoved","onUpdated","onActivated","onReplaced","webNavigation","getFrame","getAllFrames","onBeforeNavigate","onCommitted","onCompleted","onCreatedNavigationTarget","onDOMContentLoaded","onErrorOccurred","onHistoryStateUpdated","onReferenceFragmentUpdated","onTabReplaced","webRequest","onHeadersReceived","WINDOW_ID_NONE","getLastFocused","onFocusChanged","keys","forEach","apiName","baseApi","defineProperty","value","enumerable","configurable","freeze","contextBridge","exposeInMainWorld","webFrame","executeJavaScript"],"mappings":"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","file":"preload.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/preload.ts\");\n","import { injectExtensionAPIs } from './renderer'\r\n\r\n// Only load within extension page context\r\nif (location.href.startsWith('chrome-extension://')) {\r\n  injectExtensionAPIs()\r\n}\r\n","import { ipcRenderer } from 'electron'\r\n\r\nconst formatIpcName = (name: string) => `crx-${name}`\r\n\r\nconst listenerMap = new Map<string, number>()\r\n\r\nexport const addExtensionListener = (extensionId: string, name: string, callback: Function) => {\r\n  const listenerCount = listenerMap.get(name) || 0\r\n\r\n  if (listenerCount === 0) {\r\n    // TODO: should these IPCs be batched in a microtask?\r\n    ipcRenderer.send('crx-add-listener', extensionId, name)\r\n  }\r\n\r\n  listenerMap.set(name, listenerCount + 1)\r\n\r\n  ipcRenderer.addListener(formatIpcName(name), function (event, ...args) {\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(name, '(result)', ...args)\r\n    }\r\n    callback(...args)\r\n  })\r\n}\r\n\r\nexport const removeExtensionListener = (extensionId: string, name: string, callback: any) => {\r\n  if (listenerMap.has(name)) {\r\n    const listenerCount = listenerMap.get(name) || 0\r\n\r\n    if (listenerCount <= 1) {\r\n      listenerMap.delete(name)\r\n\r\n      ipcRenderer.send('crx-remove-listener', extensionId, name)\r\n    } else {\r\n      listenerMap.set(name, listenerCount - 1)\r\n    }\r\n  }\r\n\r\n  ipcRenderer.removeListener(formatIpcName(name), callback)\r\n}\r\n","import { ipcRenderer, contextBridge, webFrame } from 'electron'\r\nimport { addExtensionListener, removeExtensionListener } from './event'\r\n\r\nexport const injectExtensionAPIs = () => {\r\n  interface ExtensionMessageOptions {\r\n    noop?: boolean\r\n    serialize?: (...args: any[]) => any[]\r\n  }\r\n\r\n  const invokeExtension = async function (\r\n    extensionId: string,\r\n    fnName: string,\r\n    options: ExtensionMessageOptions = {},\r\n    ...args: any[]\r\n  ) {\r\n    const callback = typeof args[args.length - 1] === 'function' ? args.pop() : undefined\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(fnName, args)\r\n    }\r\n\r\n    if (options.noop) {\r\n      console.warn(`${fnName} is not yet implemented.`)\r\n      if (callback) callback()\r\n      return\r\n    }\r\n\r\n    if (options.serialize) {\r\n      args = options.serialize(...args)\r\n    }\r\n\r\n    let result\r\n\r\n    try {\r\n      result = await ipcRenderer.invoke('crx-msg', extensionId, fnName, ...args)\r\n    } catch (e) {\r\n      // TODO: Set chrome.runtime.lastError?\r\n      console.error(e)\r\n      result = undefined\r\n    }\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(fnName, '(result)', result)\r\n    }\r\n\r\n    if (callback) {\r\n      callback(result)\r\n    } else {\r\n      return result\r\n    }\r\n  }\r\n\r\n  const electronContext = {\r\n    invokeExtension,\r\n    addExtensionListener,\r\n    removeExtensionListener,\r\n  }\r\n\r\n  // Function body to run in the main world.\r\n  // IMPORTANT: This must be self-contained, no closure variable will be included!\r\n  function mainWorldScript() {\r\n    // Use context bridge API or closure variable when context isolation is disabled.\r\n    const electron = ((window as any).electron as typeof electronContext) || electronContext\r\n\r\n    const chrome = window.chrome || {}\r\n    const extensionId = chrome.runtime?.id\r\n\r\n    // NOTE: This uses a synchronous IPC to get the extension manifest.\r\n    // To avoid this, JS bindings for RendererExtensionRegistry would be\r\n    // required.\r\n    const manifest: chrome.runtime.Manifest =\r\n      (extensionId && chrome.runtime.getManifest()) || ({} as any)\r\n\r\n    //取回message的内容，替换掉i18n的本地化方法，因为那个方法有问题\r\n    let localeMessages:any={}\r\n    const invokeExtension =\r\n      (fnName: string, opts: ExtensionMessageOptions = {}) =>\r\n      (...args: any[]) =>\r\n        electron.invokeExtension(extensionId, fnName, opts, ...args)\r\n    invokeExtension( 'i18n.getAllMessage')((args:[])=>{\r\n      localeMessages=args\r\n    })//取回全部的message\r\n\r\n    function imageData2base64(imageData: ImageData) {\r\n      const canvas = document.createElement('canvas')\r\n      const ctx = canvas.getContext('2d')\r\n      if (!ctx) return null\r\n\r\n      canvas.width = imageData.width\r\n      canvas.height = imageData.height\r\n      ctx.putImageData(imageData, 0, 0)\r\n\r\n      return canvas.toDataURL()\r\n    }\r\n\r\n    class ExtensionEvent<T extends Function> implements chrome.events.Event<T> {\r\n      constructor(private name: string) {}\r\n\r\n      addListener(callback: T) {\r\n        electron.addExtensionListener(extensionId, this.name, callback)\r\n      }\r\n      removeListener(callback: T) {\r\n        electron.removeExtensionListener(extensionId, this.name, callback)\r\n      }\r\n\r\n      getRules(callback: (rules: chrome.events.Rule[]) => void): void\r\n      getRules(ruleIdentifiers: string[], callback: (rules: chrome.events.Rule[]) => void): void\r\n      getRules(ruleIdentifiers: any, callback?: any) {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n      hasListener(callback: T): boolean {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n      removeRules(ruleIdentifiers?: string[] | undefined, callback?: (() => void) | undefined): void\r\n      removeRules(callback?: (() => void) | undefined): void\r\n      removeRules(ruleIdentifiers?: any, callback?: any) {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n      addRules(\r\n        rules: chrome.events.Rule[],\r\n        callback?: ((rules: chrome.events.Rule[]) => void) | undefined\r\n      ): void {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n      hasListeners(): boolean {\r\n        throw new Error('Method not implemented.')\r\n      }\r\n    }\r\n\r\n    class ChromeSetting implements Partial<chrome.types.ChromeSetting> {\r\n      set() {}\r\n      get() {}\r\n      clear() {}\r\n      // onChange: chrome.types.ChromeSettingChangedEvent\r\n    }\r\n\r\n    type DeepPartial<T> = {\r\n      [P in keyof T]?: DeepPartial<T[P]>\r\n    }\r\n\r\n    type APIFactoryMap = {\r\n      [apiName in keyof typeof chrome]: {\r\n        shouldInject?: () => boolean\r\n        factory: (base: DeepPartial<typeof chrome[apiName]>) => DeepPartial<typeof chrome[apiName]>\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Factories for each additional chrome.* API.\r\n     */\r\n    const apiDefinitions: Partial<APIFactoryMap> = {\r\n      browserAction: {\r\n        shouldInject: () => !!manifest.browser_action,\r\n        factory: (base) => {\r\n          const api = {\r\n            ...base,\r\n\r\n            setTitle: invokeExtension('browserAction.setTitle'),\r\n            getTitle: invokeExtension('browserAction.getTitle'),\r\n\r\n            setIcon: invokeExtension('browserAction.setIcon', {\r\n              serialize: (details: any) => {\r\n                if (details.imageData) {\r\n                  if (details.imageData instanceof ImageData) {\r\n                    details.imageData = imageData2base64(details.imageData)\r\n                  } else {\r\n                    details.imageData = Object.entries(details.imageData).reduce(\r\n                      (obj: any, pair: any[]) => {\r\n                        obj[pair[0]] = imageData2base64(pair[1])\r\n                        return obj\r\n                      },\r\n                      {}\r\n                    )\r\n                  }\r\n                }\r\n\r\n                return [details]\r\n              },\r\n            }),\r\n\r\n            setPopup: invokeExtension('browserAction.setPopup'),\r\n            getPopup: invokeExtension('browserAction.getPopup'),\r\n\r\n            setBadgeText: invokeExtension('browserAction.setBadgeText'),\r\n            getBadgeText: invokeExtension('browserAction.getBadgeText'),\r\n\r\n            setBadgeBackgroundColor: invokeExtension('browserAction.setBadgeBackgroundColor'),\r\n            getBadgeBackgroundColor: invokeExtension('browserAction.getBadgeBackgroundColor'),\r\n\r\n            enable: invokeExtension('browserAction.enable', { noop: true }),\r\n            disable: invokeExtension('browserAction.disable', { noop: true }),\r\n\r\n            onClicked: new ExtensionEvent('browserAction.onClicked'),\r\n          }\r\n\r\n          return api\r\n        },\r\n      },\r\n\r\n      commands: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            getAll: invokeExtension('commands.getAll'),\r\n            onCommand: new ExtensionEvent('commands.onCommand'),\r\n          }\r\n        },\r\n      },\r\n\r\n      contextMenus: {\r\n        factory: (base) => {\r\n          let menuCounter = 0\r\n          const menuCallbacks: {\r\n            [key: string]: chrome.contextMenus.CreateProperties['onclick']\r\n          } = {}\r\n          const menuCreate = invokeExtension('contextMenus.create')\r\n\r\n          let hasInternalListener = false\r\n          const addInternalListener = () => {\r\n            api.onClicked.addListener((info, tab) => {\r\n              const callback = menuCallbacks[info.menuItemId]\r\n              if (callback && tab) callback(info, tab)\r\n            })\r\n            hasInternalListener = true\r\n          }\r\n\r\n          const api = {\r\n            ...base,\r\n            create: function (\r\n              createProperties: chrome.contextMenus.CreateProperties,\r\n              callback?: Function\r\n            ) {\r\n              if (typeof createProperties.id === 'undefined') {\r\n                createProperties.id = `${++menuCounter}`\r\n              }\r\n              if (createProperties.onclick) {\r\n                if (!hasInternalListener) addInternalListener()\r\n                menuCallbacks[createProperties.id] = createProperties.onclick\r\n                delete createProperties.onclick\r\n              }\r\n              menuCreate(createProperties, callback)\r\n              return createProperties.id\r\n            },\r\n            update: invokeExtension('contextMenus.update', { noop: true }),\r\n            remove: invokeExtension('contextMenus.remove'),\r\n            removeAll: invokeExtension('contextMenus.removeAll'),\r\n            onClicked: new ExtensionEvent<\r\n              (info: chrome.contextMenus.OnClickData, tab: chrome.tabs.Tab) => void\r\n            >('contextMenus.onClicked'),\r\n          }\r\n\r\n          return api\r\n        },\r\n      },\r\n\r\n      cookies: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            get: invokeExtension('cookies.get'),\r\n            getAll: invokeExtension('cookies.getAll'),\r\n            set: invokeExtension('cookies.set'),\r\n            remove: invokeExtension('cookies.remove'),\r\n            getAllCookieStores: invokeExtension('cookies.getAllCookieStores'),\r\n            onChanged: new ExtensionEvent('cookies.onChanged'),\r\n          }\r\n        },\r\n      },\r\n      //todo 补充权限管理\r\n      permissions:{\r\n        factory:(base)=>{\r\n          return {\r\n            ...base,\r\n            contains:invokeExtension('permissions.contains')\r\n          }\r\n        }\r\n      },\r\n\r\n      i18n:{\r\n        factory:(base)=>{\r\n          return {\r\n            ...base,\r\n            //修复i18n方法\r\n            getMessage: (messageName:String,substitutions:String[]=[])=>{\r\n                let localeJson=localeMessages\r\n                function getMessage(name:String,substitutions?:String[]){\r\n                  let messageKey = localeJson[name as keyof typeof localeJson]\r\n                  if (typeof messageKey !== 'undefined') {\r\n                   let result= messageKey['message' as keyof typeof messageKey]\r\n                    return result\r\n                  } else {\r\n                    return undefined\r\n                  }\r\n                }\r\n                function preMatch(str:string){\r\n                  var pattern = /\\$.*?\\$/g\r\n                 return pattern.test(str);\r\n                }\r\n\r\n              /**\r\n               * 匹配变量\r\n               * @param source\r\n               * @param scope\r\n               */\r\n              function templater(source:String, scope:String[]){\r\n                const tokenRegex = /\\$.*?\\$/g;\r\n                let i=0\r\n                var result = source.replace(\r\n                  tokenRegex,\r\n                  function(match:String, key:any):any {\r\n                    let rs=typeof scope[i] !== 'undefined' ? scope[i] : match;\r\n                    i++\r\n                    return rs\r\n                  }\r\n                );\r\n                return result;\r\n              }\r\n                if(!messageName){\r\n                  //如果是数组，则返回一个对应的数组\r\n                  return undefined\r\n                }else{\r\n                  //如果不是数组，则直接返回\r\n                  let gotMessage=getMessage(messageName,substitutions)\r\n                  let matches=preMatch(gotMessage)\r\n                  if(matches){\r\n                    if(substitutions.length===0 || substitutions.length>9){\r\n                      //替换数组不符合规定\r\n                      return undefined\r\n                    }else{\r\n                      return templater(gotMessage,substitutions)\r\n\r\n                    }\r\n                  }\r\n                  return gotMessage\r\n                }\r\n            }\r\n            // getAcceptLanguages: ()=>{\r\n            //   return ['zh-CN','zh_CN']\r\n            // }\r\n          }\r\n        }\r\n      },\r\n\r\n      extension: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            isAllowedIncognitoAccess: () => false,\r\n            isAllowedFileSchemeAccess:async (callback:Function)=>{\r\n              return true//todo 此处应该还要兼容一下涉及到的文件协议\r\n              //callback(true)\r\n            },\r\n            // TODO: Add native implementation\r\n            getViews: () => [],\r\n          }\r\n        },\r\n      },\r\n\r\n      notifications: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            clear: invokeExtension('notifications.clear'),\r\n            create: invokeExtension('notifications.create'),\r\n            getAll: invokeExtension('notifications.getAll'),\r\n            getPermissionLevel: invokeExtension('notifications.getPermissionLevel'),\r\n            update: invokeExtension('notifications.update'),\r\n            onClicked: new ExtensionEvent('notifications.onClicked'),\r\n            onButtonClicked: new ExtensionEvent('notifications.onButtonClicked'),\r\n            onClosed: new ExtensionEvent('notifications.onClosed'),\r\n          }\r\n        },\r\n      },\r\n\r\n      privacy: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            network: {\r\n              networkPredictionEnabled: new ChromeSetting(),\r\n              webRTCIPHandlingPolicy: new ChromeSetting(),\r\n            },\r\n            websites: {\r\n              hyperlinkAuditingEnabled: new ChromeSetting(),\r\n            },\r\n          }\r\n        },\r\n      },\r\n\r\n      runtime: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            openOptionsPage: invokeExtension('runtime.openOptionsPage'),\r\n            // getManifest:()=>{\r\n            //   manifest.current_locale='zh_CN'\r\n            //   return manifest\r\n            // }\r\n          }\r\n        },\r\n      },\r\n\r\n      storage: {\r\n        factory: (base) => {\r\n          const local = base && base.local\r\n          return {\r\n            ...base,\r\n            // TODO: provide a backend for browsers to opt-in to\r\n            managed: local,\r\n            sync: local,\r\n          }\r\n        },\r\n      },\r\n\r\n      tabs: {\r\n        factory: (base) => {\r\n          const api = {\r\n            ...base,\r\n            create: invokeExtension('tabs.create'),\r\n            executeScript: function (arg1: unknown, arg2: unknown, arg3: unknown) {\r\n              // Electron's implementation of chrome.tabs.executeScript is in\r\n              // C++, but it doesn't support implicit execution in the active\r\n              // tab. To handle this, we need to get the active tab ID and\r\n              // pass it into the C++ implementation ourselves.\r\n              if (typeof arg1 === 'object') {\r\n                api.query(\r\n                  { active: true, windowId: chrome.windows.WINDOW_ID_CURRENT },\r\n                  ([activeTab]: chrome.tabs.Tab[]) => {\r\n                    api.executeScript(activeTab.id, arg1, arg2)\r\n                  }\r\n                )\r\n              } else {\r\n                ;(base.executeScript as typeof chrome.tabs.executeScript)(\r\n                  arg1 as number,\r\n                  arg2 as chrome.tabs.InjectDetails,\r\n                  arg3 as () => {}\r\n                )\r\n              }\r\n            },\r\n            get: invokeExtension('tabs.get'),\r\n            getSelected:invokeExtension('tabs.getSelected'),//todo 确认是否正确返回\r\n            getCurrent: invokeExtension('tabs.getCurrent'),\r\n            getAllInWindow: invokeExtension('tabs.getAllInWindow'),\r\n            insertCSS: invokeExtension('tabs.insertCSS'),\r\n            query: invokeExtension('tabs.query'),\r\n            reload: invokeExtension('tabs.reload'),\r\n            update: invokeExtension('tabs.update'),\r\n            remove: invokeExtension('tabs.remove'),\r\n            goBack: invokeExtension('tabs.goBack'),\r\n            goForward: invokeExtension('tabs.goForward'),\r\n            onCreated: new ExtensionEvent('tabs.onCreated'),\r\n            onRemoved: new ExtensionEvent('tabs.onRemoved'),\r\n            onUpdated: new ExtensionEvent('tabs.onUpdated'),\r\n            onActivated: new ExtensionEvent('tabs.onActivated'),\r\n            onReplaced: new ExtensionEvent('tabs.onReplaced'),\r\n          }\r\n          return api\r\n        },\r\n      },\r\n\r\n      webNavigation: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            getFrame: invokeExtension('webNavigation.getFrame'),\r\n            getAllFrames: invokeExtension('webNavigation.getAllFrames'),\r\n            onBeforeNavigate: new ExtensionEvent('webNavigation.onBeforeNavigate'),\r\n            onCommitted: new ExtensionEvent('webNavigation.onCommitted'),\r\n            onCompleted: new ExtensionEvent('webNavigation.onCompleted'),\r\n            onCreatedNavigationTarget: new ExtensionEvent(\r\n              'webNavigation.onCreatedNavigationTarget'\r\n            ),\r\n            onDOMContentLoaded: new ExtensionEvent('webNavigation.onDOMContentLoaded'),\r\n            onErrorOccurred: new ExtensionEvent('webNavigation.onErrorOccurred'),\r\n            onHistoryStateUpdated: new ExtensionEvent('webNavigation.onHistoryStateUpdated'),\r\n            onReferenceFragmentUpdated: new ExtensionEvent(\r\n              'webNavigation.onReferenceFragmentUpdated'\r\n            ),\r\n            onTabReplaced: new ExtensionEvent('webNavigation.onTabReplaced'),\r\n          }\r\n        },\r\n      },\r\n\r\n      webRequest: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            onHeadersReceived: new ExtensionEvent('webRequest.onHeadersReceived'),\r\n          }\r\n        },\r\n      },\r\n\r\n      windows: {\r\n        factory: (base) => {\r\n          return {\r\n            ...base,\r\n            WINDOW_ID_NONE: -1,\r\n            WINDOW_ID_CURRENT: -2,\r\n            getCurrent:invokeExtension('windows.getCurrent'),\r\n            get: invokeExtension('windows.get'),\r\n            getLastFocused: invokeExtension('windows.getLastFocused'),\r\n            getAll: invokeExtension('windows.getAll'),\r\n            create: invokeExtension('windows.create'),\r\n            update: invokeExtension('windows.update'),\r\n            remove: invokeExtension('windows.remove'),\r\n            onCreated: new ExtensionEvent('windows.onCreated'),\r\n            onRemoved: new ExtensionEvent('windows.onRemoved'),\r\n            onFocusChanged: new ExtensionEvent('windows.onFocusChanged'),\r\n          }\r\n        },\r\n      },\r\n    }\r\n\r\n    // Initialize APIs\r\n    Object.keys(apiDefinitions).forEach((key: any) => {\r\n      const apiName: keyof typeof chrome = key\r\n      const baseApi = chrome[apiName] as any\r\n      const api = apiDefinitions[apiName]!\r\n\r\n      // Allow APIs to opt-out of being available in this context.\r\n      if (api.shouldInject && !api.shouldInject()) return\r\n      Object.defineProperty(chrome, apiName, {\r\n        value: api.factory(baseApi),\r\n        enumerable: true,\r\n        configurable: true,\r\n      })\r\n    })\r\n\r\n    // Remove access to internals\r\n    delete (window as any).electron\r\n\r\n    Object.freeze(chrome)\r\n\r\n    void 0 // no return\r\n  }\r\n\r\n  try {\r\n    // Expose extension IPC to main world\r\n    contextBridge.exposeInMainWorld('electron', electronContext)\r\n\r\n    // Mutate global 'chrome' object with additional APIs in the main world.\r\n    webFrame.executeJavaScript(`(${mainWorldScript}());`)\r\n  } catch {\r\n    // contextBridge threw an error which means we're in the main world so we\r\n    // can just execute our function.\r\n    mainWorldScript()\r\n  }\r\n}\r\n","module.exports = require(\"electron\");"],"sourceRoot":""}